import funkin.play.PlayState;
import flixel.tweens.FlxTween;
import flixel.tweens.FlxEase;
import funkin.play.stage.Stage;
import funkin.graphics.FunkinSprite;
import flixel.util.FlxTimer;
import flixel.util.FlxStringUtil;
import flixel.path.FlxPath;
import flixel.text.FlxText;
import flixel.ui.FlxBar;
import flixel.text.FlxTextBorderStyle;
import flixel.util.FlxColor;
import flixel.FlxG;
import funkin.Conductor;

class BiteStage extends Stage {
    var fireballs = [];
    var currentWorldBg;
    var currentWorldBgStr;
    var blackScreen;
    var whiteScreen;
    var lvl1BopBg;

    var fb_rotating = false;
    var currentTimeText;
    var timeStr = " / 4:52";

    var redBar;
    var grey_bar;
    
    function new() {
        super('ShobonNoAction');
    }

    function set_camera (obj_name) {
        var prop = getNamedProp(obj_name);
        if (prop != null) {
            prop.cameras = [PlayState.instance.camCutscene];
        } else {
        }
    }

    override function onCountdownStart(event) {
        currentWorldBg = getNamedProp("lv2");
        fireballs = [for (i in 1...4) getNamedProp("fb" + i)];

        blackScreen = getNamedProp("blackScreen");
        whiteScreen = getNamedProp("whiteScreen");
        lvl1BopBg = getNamedProp("lvl1BopBg");
        
        var objs = ["blackYoutubeHudBg", "youtubeHud", "youtubeHudTimebar", "youtubeHudTitle",];
        for (obj in objs) {
            set_camera(obj);
        }

        currentTimeText = new FlxText().setFormat(Paths.font('roboto.ttf'), 16, FlxColor.WHITE, "center", FlxTextBorderStyle.NONE);
        currentTimeText.x = 185;
        currentTimeText.y = 684;
        currentTimeText.zIndex = 901;
        add(currentTimeText);

        currentTimeText.cameras = [PlayState.instance.camCutscene];

        redBar = new FlxBar(20, 665, "LEFT_TO_RIGHT", 1235, 5, null);
        redBar.createFilledBar(FlxColor.fromRGB(51,50,50), FlxColor.RED);
        
        redBar.numDivisions = 1000;
        redBar.zIndex = 901;
        add(redBar);

        redBar.cameras = [PlayState.instance.camCutscene];

        refresh();
    }

    function startFireballsRotate() {
        fb_rotating = true;
    }

    override function onSongRetry(event) {
        super.onSongRetry(event);
        changeLevel("lv2");

        blackScreen.alpha = 0;
    }

    override function onUpdate(event) {
        super.onUpdate(event);

        currentTimeText.text = FlxStringUtil.formatTime(Conductor.instance.songPosition / 1000, false) + timeStr;
        
        if (FlxG.sound.music != null) {
            redBar.value = (Conductor.instance.songPosition / FlxG.sound.music.length) * 100;
        }

        if (fb_rotating == false) return; 
        fireballs[0].angle += 2.1;
        fireballs[1].angle += 2;
        fireballs[2].angle += 2.125;

    }

    function showScreen1Lives() {
        blackout(true);

        var lives = getNamedProp("screen1Lives");
        lives.alpha = 1;
        new FlxTimer().start(1.3, () -> {
            lightup();
            lives.alpha = 0;
        });
    }

    function setScreen2TrollVisible(visible) {
        if (visible) blackout(true); else lightup();
        
        PlayState.instance.playerStrumline.visible = !visible;
        var troll = getNamedProp("trollface");
        troll.alpha = visible ? 1 : 0;
    }

    function setFireballsVisible(visible) {
        for (fb in fireballs) {
            fb.alpha = visible ? 1 : 0;
        }
    }

    function blackout(coverChars) {
        if (coverChars) {
            blackScreen.zIndex = 400;
            refresh();
        }

        blackScreen.alpha = 1;
    }

    function lightup() {
        blackScreen.zIndex = 199;
        refresh();
        blackScreen.alpha = 0;
    }
    
    function setSideBarsVisible(visible) {
        var bars = [getNamedProp("leftBg"), getNamedProp("rightBg")];
        for (b in bars) {
            b.alpha = visible ? 1 : 0;
        }
    }

    function flashScreen(duration, reverse = false, extraArgs = {}) {
        whiteScreen.alpha = reverse ? 0 : 1;
        FlxTween.tween(whiteScreen, {alpha: reverse ? 1 : 0}, duration, extraArgs);
    }

    function explodeBaby() {
        var explosion = getNamedProp("explosion");
        explosion.alpha = 1;
        explosion.animation.play("explode");
    }

    var w_tween;

    function onBeatHit(event) {
        if (event.beat % 2 == 0 && w_tween == null && currentWorldBgStr == "lv1") {
            lvl1BopBg.alpha = 0.25;
            w_tween = FlxTween.tween(lvl1BopBg, { alpha: 0 }, 0.5, { ease: FlxEase.quadInOut, onComplete: () -> {
                w_tween = null;
            } });
        }
    }

    function throwHammer() {
        var hammer = getNamedProp("martillolery");
        hammer.angle = 25;
        FlxTween.tween(hammer, {alpha: 1}, 0.6, {ease: FlxEase.sineOut, onComplete: () -> {
            FlxTween.tween(hammer, {x: getGirlfriend().x - 150}, 0.75, {ease: FlxEase.linear});
            FlxTween.tween(hammer, {y: hammer.y - 130}, 0.2, {ease: FlxEase.sineOut, onComplete: () -> {
                FlxTween.tween(hammer, {y: 380}, 0.7, {ease: FlxEase.cubeInOut});
            }});
            FlxTween.angle(hammer, 0, -3600, 1);
        }});
    }

    function changeLevel(level) {
        var bf = getBoyfriend();
        var gf = getGirlfriend();
        
        currentWorldBg.alpha = 0; // hides old world

        currentWorldBg = getNamedProp(level);
        currentWorldBg.alpha = 1;

        if (level == "lv1") {
            var f = getDad();
            getGirlfriend().alpha = 0;
            f.y = -490;
            f.x = -585.5;
            getNamedProp("lv1Bg").alpha = 1;
            flashScreen(1);
        } else {
            getNamedProp("lv1Bg").alpha = 0;
        }

        if (level == "lv4") {
            getNamedProp("tb1").alpha = 0;
            blackScreen.alpha = 0;
            setSideBarsVisible(false);
            flashScreen(1);
            setFireballsVisible(true);
            fb_rotating = true;
        } else {
            setSideBarsVisible(true);
            setFireballsVisible(false);
            fb_rotating = false;
        }

        if (level == "lv2In") {
            getBoyfriend().alpha = 0;
            var gf = getGirlfriend();
            var f = getDad();


            getNamedProp("tb2").alpha = 1;
            f.scale.set(1,1);
            f.angle = 0;
            f.alpha = 0;
            f.x = -585.5;
            f.y = -490;
            gf.y = 51;
            gf.x = -340;
            gf.alpha = 1;
        }

        currentWorldBgStr = level;
    }
}